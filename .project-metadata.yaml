#---------------------------------------------------------
################# General Aspects section ################
#---------------------------------------------------------
  
name: CECALT - CEnter of MeteorologiCAL Technology
description: CECALT is an integral solution which contributes to hurricane prediction sensitivity.
author:  Aaron Castillo, Gilberto Subias, Javier Sanchez.
specification_version: 1.0
prototype_version: 1.0

#environment_variables:
#  RANDOM_VARIABLE_NAME:
#    default: "DEFAULT-VALUE"
#    description: "A description providing user clarifying information about the variable."
#    required: false

runtimes:
  - editor: Workbench ## Other acceptable values are determined by the runtimes available in your CML environment
    kernel: Python 3.9 ## Same here, check your runtimes (custom runtimes can be added as well)
    edition: Standard ## Particularly relevant if using GPUs, Nvidia GPU

## Below are some sample tasks based on some of the most popular aspects of AMP creation.
tasks:

  ## SESSION related AMP snippet
  - type: run_session
    name: Install Dependencies
    script: scripts/install_dependencies.py
    short_summary: Install Requirements and Dependencies
    kernel: python3
    cpu: 2
    memory: 4

  #Train model is a run_job 
  #Train model is a run_job 
  #Train model is a run_job 
  #Train model is a run_job 
  #Train model is a run_job 
  #Train model is a run_job 
  
  ## JOB related AMP snippet
 # - type: create_job
 #   name: Sample Job
 #   entity_label: sample_job
 #   script: 1_job-run-python-job/job.py
 #   arguments: None
 #   cpu: 1
 #   memory: 4
 #   short_summary: Create job to install project dependencies.
 #   environment:
 #     TASK_TYPE: CREATE/RUN_JOB

 # - type: run_job
 #   entity_label: sample_job
 #   short_summary: Short summary here about running the job you just created.

  ## MODEL related AMP snippet
 # - type: create_model
 #   name: model-name
 #   entity_label: sample-model-entity-label
 #   description: create sample model hosted in CML. 
 #   short_summary: Model name
 #   default_resources:
 #     cpu: 2
 #     memory: 4
 #     gpu: 1
 #   default_replication_policy:
 #     type: fixed
 #     num_replicas: 1
  
 # - type: build_model
 #   name: Build Sample model
 #   entity_label: sample-model-entity-label
 #   comment: First build by the AMP
 #   examples:
 #     - request:
 #         prompt: What is Cloudera?
 #         temperature: 0
 #         max_new_tokens: 50
 #         repetition_penalty: 0.5

#    target_file_path: 2_model-deploy-model/launch-model.py
#    target_function_name: api_wrapper

#  - type: deploy_model
#    entity_label: sample-model-entity-label

  #---------------------------------------------------------
  ############ Create, Build and Deploy sections ###########
  #---------------------------------------------------------
  #Note: all create, build and deploy must be together or removed completely.
  
  - type: create_model
    name: Flight Delay Prediction Model Endpoint
    entity_label: flight_model
    description: This model api endpoint predicts flight delays
    short_summary: Create the flight delay prediction model api endpoint
    #access_key_environment_variable: SHTM_ACCESS_KEY
    default_replication_policy:
      type: fixed
      num_replicas: 1

  - type: build_model
    name: Flight Delay Prediction Model API Endpoint
    entity_label: flight_model
    comment: Build flight prediction model
    examples:
      - request: {"a": 1, "b": 2} #{ "feature": "US,DCA,BOS,1,16" }
        response: 1
    target_file_path: scripts/model_serve.py
    target_function_name: add #predict_cancelled
    environment_variables:
      TASK_TYPE: CREATE/BUILD/DEPLOY_MODEL

  - type: deploy_model
    name: flight_prediction_model
    entity_label: flight_model
    cpu: 1
    gpu: 0
    environment_variables:
      TASK_TYPE: CREATE/BUILD/DEPLOY_MODEL
    
  #---------------------------------------------------------
  ################### Application section ##################
  #---------------------------------------------------------
  
  # - type: start_application
  #  name: CECALT Application
  #  short_summary: This CECALT implementation by dinamically inserting the relevant inputs and getting a wind speed prediction. 
  #  long_summary: This is CECALT implementation where, by inserting certain meteorological inputs, the predicted wind speed (essential for hurricane measurement) will be retrieved.
  #  subdomain: hurricane-prediction
  #  script: scripts/launch_app.py
  #  environment_variables:
  #    TASK_TYPE: START_APPLICATION
